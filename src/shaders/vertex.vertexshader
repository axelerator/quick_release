#version 120

// Input vertex data, different for all executions of this shader.
attribute vec3 vertexPosition_modelspace;
attribute vec2 vertexUV;
uniform float zoom;
uniform vec2 pos;
uniform float aspect;

// Output data ; will be interpolated for each fragment.
varying vec2 UV;

// Values that stay constant for the whole mesh.
uniform mat4 MVP;

void main(){

// Output position of the vertex, in clip space : MVP * position
//gl_Position =  vec4(vertexPosition_modelspace,1);
gl_Position.xyz = vertexPosition_modelspace * vec3(1.0, aspect, 1.0) * zoom + vec3(pos.x, pos.y, 0.0);
gl_Position.w = 1.0;

// UV of the vertex. No special space for this one.
UV = vertexUV;
}


